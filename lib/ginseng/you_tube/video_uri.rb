module Ginseng
  module YouTube
    class VideoURI < Ginseng::URI
      include Package

      def initialize(options = {})
        super
        @service = you_tube_service_class.new
      end

      def id
        return query_values['v']
      rescue
        return nil
      end

      def data
        @data ||= @service.lookup_video(id)
        return @data
      end

      def music?
        return host == 'music.youtube.com'
      end

      def image_uri
        unless @image_uri
          ['standard', 'high', 'medium', 'deault'].each do |size|
            next unless url = data.dig('snippet', 'thumbnails', size, 'url')
            next unless uri = Ginseng::URI.parse(url)
            next unless uri.absolute?
            return @image_uri = uri
          end
        end
        return @image_uri
      end

      def title
        return data.dig('snippet', 'title')
      end

      def channel_title
        return data.dig('snippet', 'channelTitle')
      end

      def channel_id
        return data.dig('snippet', 'channelId')
      end

      def channel
        return channel_title
      end

      def artist
        if auto_generated_description?
          tags = data.dig('snippet', 'tags')
          tags.each do |tag|
            return tag unless tag.match?('^[ _a-zA-Z0-9]+$')
          end
          return tags.first if tags.first
        end
        return channel.sub(/ - Topic$/, '') if music?
        return channel
      end

      def auto_generated_description?
        return data.dig('snippet', 'description').end_with?('Auto-generated by YouTube.') if data
        return false
      end

      def view_count
        return nil unless data
        return data['statistics']['viewCount'].to_i
      end

      alias count view_count
    end
  end
end
